- 용어 정리

백-백 API 서버
: 백엔드 부분은 유저에게 보여지는 부분 이외에 뒤에서 작동하는 부분으로 서버나 데이터베이스까지 관리하는 기술이다.
백 API 는 그 과정에서 필요한 동작들을 구분지어서 범용성을 확보하기 위해 만들어짐.
백 서버는 REST API 에서 json 으로 자료를 내려받아서 처리함?

프론트-백 서버
: 프론트와 백 서버의 관계는 입력받고 / 처리하고 의 관계로 보여진다.
REST 하게 리소스를 표현하고 URI에 담아 HTTP 메서드를 통해 정보를 전달하면
백 서버에서 CRUD 를 restFul 하게 CRUD 를 실현시켜서 프로그램을 동작시킨다.

프론트 어플리케이션
: 프론트 어플리케이션은 어플리케이션의 인터페이스로 알려져 있기도 하다.
유저가 보고 사용하는 버튼과 이미지 같은 부분들을 통해 백 서버와
소통을 하게 되는 소통창구로 보면 된다.
유저 -> 서버 를 가능하게 하는 통로.

CORS (Cross-Origin Resource Sharing)
: 브라우저에서는 보안적인 이유로 Cross-Origin HTTP 요청들에게 서버의 동의를
구하라고 제하나을 건다. 이때 허락을 구하고 거절하는 매커니즘을 HTTP-header를
이용하는데 이를 CORS 라고 한다. = 요청을 안전하게 하는 매커니즘

Cross-origin ?
: 다음중 한가지라도 다른 경우를 말한다.
프로토콜(http와 https 는 다른 프로토콜), 도메인(domain.com !== other-domain.com),
포트번호(8080 !== 3000)

Domain Name (host)
: ip는 사람이 이해하고 기억하기 어렵기 때문이 이를 위해서 각 ip에
이름을 부여할 수 있게 했다. 이것을 도메인이라 한다.

Json Web Token(JWT) javascript object notation
: Json 포맷을 이용하여 사용자에게 대한 속성을 저장하는 Claim 기반의 Web Token 이다.
JWT는 토큰 자체를 정보로 사용하는 Self-Contained 방식으로 정보를 전달한다.
주로 회원인증이나 정보전달에 사용된다.

- 기술 조사(Research)

1. [라이브러리] squelize 사용법
- 민혁, 연재, 경화

2. [아키텍처] MVC, MVT, MVVM 패턴과 폴더구조
- 나은, 윤지, 준규

3. [기술] REST API 와 HTTP Method 관계
- 예원, 지민, 태환, 영준



- express 와 squelize 연결한 node app server

// 시컬라이즈 app.js
1. 라이브러리 선언
2. 라이브러리 설정(외부 설정파일)

// 시컬라이즈 models/index.js
3. 데이터베이스 연결 설정파일

// 시컬라이즈 모델 테이블 설정 및 관계설정
각각의 model.js 파일에서 
4. 테이블 모델 컬럼 설정
5. 테이블 모델 관계 설정

// app.js 에서 싱크 확인 
정상적으로 app이 리스닝 될 때 디비 연결확인 및 커넥션 생성

 